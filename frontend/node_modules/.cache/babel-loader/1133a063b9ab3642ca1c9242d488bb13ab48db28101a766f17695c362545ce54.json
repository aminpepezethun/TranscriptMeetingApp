{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nconst API_URL = \"http://localhost:8000\";\nexport default function useAuthForm(isLogin) {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\");\n    setSuccess(\"\");\n  };\n  const validate = () => {\n    if (!form.email || !form.password) {\n      setError(\"Email and password are required.\");\n      return false;\n    }\n    if (!isLogin && form.password !== form.confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validate()) return;\n    try {\n      const endpoint = isLogin ? \"/login\" : \"/signup\";\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: form.email,\n          password: form.password,\n          ...(isLogin ? {} : {\n            confirm_password: form.confirmPassword\n          })\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.detail || \"Authentication failed.\");\n      } else {\n        setSuccess(isLogin ? \"Login successful!\" : \"Signup successful!\");\n        // Move './TranscriptMeeting'\n        navigate(\"/TranscriptMeeting\");\n      }\n    } catch (err) {\n      setError(\"Server error. Please try again.\");\n    }\n  };\n  return {\n    form,\n    error,\n    success,\n    handleChange,\n    handleSubmit,\n    setError,\n    setSuccess\n  };\n}\n_s(useAuthForm, \"1lk4QLsVwDY2xxSjKsgFz9xJ3k4=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","API_URL","useAuthForm","isLogin","_s","navigate","form","setForm","email","password","confirmPassword","error","setError","success","setSuccess","handleChange","e","target","name","value","validate","handleSubmit","preventDefault","endpoint","response","fetch","method","headers","body","JSON","stringify","confirm_password","data","json","ok","detail","err"],"sources":["/home/minh/Documents/Web/transcript-meeting-app/frontend/src/auth/AuthForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst API_URL = \"http://localhost:8000\";\n\nexport default function useAuthForm(isLogin) {\n  const navigate = useNavigate();\n  const [form, setForm] = useState({ email: \"\", password: \"\", confirmPassword: \"\" });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    setError(\"\");\n    setSuccess(\"\");\n  };\n\n  const validate = () => {\n    if (!form.email || !form.password) {\n      setError(\"Email and password are required.\");\n      return false;\n    }\n    if (!isLogin && form.password !== form.confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!validate()) return;\n\n    try {\n      const endpoint = isLogin ? \"/login\" : \"/signup\";\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          email: form.email,\n          password: form.password,\n          ...(isLogin ? {} : { confirm_password: form.confirmPassword }),\n        }),\n      });\n\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.detail || \"Authentication failed.\");\n      } else {\n        setSuccess(isLogin ? \"Login successful!\" : \"Signup successful!\");\n        // Move './TranscriptMeeting'\n        navigate(\"/TranscriptMeeting\");\n      }\n    } catch (err) {\n      setError(\"Server error. Please try again.\");\n    }\n  };\n\n  return {\n    form,\n    error,\n    success,\n    handleChange,\n    handleSubmit,\n    setError,\n    setSuccess,\n  };\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,eAAe,SAASC,WAAWA,CAACC,OAAO,EAAE;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAG,CAAC,CAAC;EAClF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IAC1BT,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACU,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;IACrDP,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACd,IAAI,CAACE,KAAK,IAAI,CAACF,IAAI,CAACG,QAAQ,EAAE;MACjCG,QAAQ,CAAC,kCAAkC,CAAC;MAC5C,OAAO,KAAK;IACd;IACA,IAAI,CAACT,OAAO,IAAIG,IAAI,CAACG,QAAQ,KAAKH,IAAI,CAACI,eAAe,EAAE;MACtDE,QAAQ,CAAC,yBAAyB,CAAC;MACnC,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI,CAACF,QAAQ,CAAC,CAAC,EAAE;IAEjB,IAAI;MACF,MAAMG,QAAQ,GAAGpB,OAAO,GAAG,QAAQ,GAAG,SAAS;MAC/C,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGxB,OAAO,GAAGsB,QAAQ,EAAE,EAAE;QACpDG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBtB,KAAK,EAAEF,IAAI,CAACE,KAAK;UACjBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;UACvB,IAAIN,OAAO,GAAG,CAAC,CAAC,GAAG;YAAE4B,gBAAgB,EAAEzB,IAAI,CAACI;UAAgB,CAAC;QAC/D,CAAC;MACH,CAAC,CAAC;MAEF,MAAMsB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChBtB,QAAQ,CAACoB,IAAI,CAACG,MAAM,IAAI,wBAAwB,CAAC;MACnD,CAAC,MAAM;QACLrB,UAAU,CAACX,OAAO,GAAG,mBAAmB,GAAG,oBAAoB,CAAC;QAChE;QACAE,QAAQ,CAAC,oBAAoB,CAAC;MAChC;IACF,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACZxB,QAAQ,CAAC,iCAAiC,CAAC;IAC7C;EACF,CAAC;EAED,OAAO;IACLN,IAAI;IACJK,KAAK;IACLE,OAAO;IACPE,YAAY;IACZM,YAAY;IACZT,QAAQ;IACRE;EACF,CAAC;AACH;AAACV,EAAA,CA9DuBF,WAAW;EAAA,QAChBF,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}